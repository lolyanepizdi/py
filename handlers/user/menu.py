from aiogram.types import Message, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from loader import dp, db
from filters import IsAdmin, IsUser, IsOper, IsCura
import json

catalog = 'üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥'
cart = 'üõí –ö–æ—Ä–∑–∏–Ω–∞'
delivery_status = 'üöö –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞'
reviews = 'üìù –û—Ç–∑—ã–≤—ã'
referal = 'üí∞ –†–µ—Ñ–µ—Ä–∞–ª–∫–∞'
recrute = 'üí∏ –†–∞–±–æ—Ç–∞'
contacts = 'üõé –ö–æ–Ω—Ç–∞–∫—Ç—ã'

mod_reviews = 'üìñ –û—Ç–∑—ã–≤—ã'
mod_recrute = 'üíµ –†–∞–±–æ—Ç–∞'
mail = 'üì® –†–∞—Å—Å—ã–ª–∫–∞'
settings = '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
orders = 'üöö –ó–∞–∫–∞–∑—ã'
questions = '‚ùì –í–æ–ø—Ä–æ—Å—ã'


@dp.message_handler(IsAdmin(), commands=['admin', 'start'])
async def admin_menu(message: Message):
    admin_markup = ReplyKeyboardMarkup()
    admin_markup.add(settings, orders, mod_reviews)
    admin_markup.add(questions, mail, mod_recrute)
    first_name = message.chat.first_name
    await message.answer(f'''
–ü—Ä–∏–≤–µ—Ç, <b>{first_name}!</b> üëã
ü§ñ –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Marrakesh.        
üí∞ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ bitcoin –∏ KUNA Code.''', reply_markup=admin_markup)


@dp.message_handler(IsUser(), commands=['start', 'menu'])
async def user_menu(message: Message):
    cid = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    ref_users = []
    ref_buyers = []
    if db.fetchone('SELECT first_name FROM users WHERE cid=?', (cid,)) is None:
        if db.fetchone('SELECT first_name FROM admins WHERE cid=?', (cid,)) is None:
            db.query('INSERT INTO referral VALUES (?, ?, ?, ?, ?)',
                     (cid, username, json.dumps(ref_users), json.dumps(ref_buyers), 0))
        else:
            await admin_menu(message)

        if len(message.text.split()) > 1 and 'start' in message.text:
            referral = message.text.split()[1]
            ref_cid = db.fetchone('SELECT cid FROM users WHERE username=?', (referral,))[0]
            if referral != username and cid not in ref_users:
                ref_users.append(cid)

            if db.fetchone('SELECT bonus FROM referral WHERE username=?', (referral,)) is None:
                db.query('INSERT INTO referral VALUES (?, ?, ?, ?, ?)', (ref_cid, referral, json.dumps(ref_users), json.dumps(ref_buyers), 0))
            else:
                db.query('UPDATE referral SET ref_users=? WHERE username=? AND cid=?', (json.dumps(ref_users), referral, ref_cid))
                db.query('INSERT or REPLACE INTO users VALUES (?, ?, ?, ?)', (cid, username, first_name, referral))
        else:
            db.query('INSERT or REPLACE INTO referral VALUES (?, ?, ?, ?, ?)', (cid, username, json.dumps(ref_users), json.dumps(ref_buyers), 0))
            db.query('INSERT or REPLACE INTO users VALUES (?, ?, ?, ?)', (cid, username, first_name, None))
    else:
        user = db.fetchone('SELECT * FROM users WHERE cid=?', (cid,))
        username = user[1]
        if db.fetchone('SELECT bonus FROM referral WHERE username=?', (username,)) is None:
            db.query('INSERT INTO referral VALUES (?, ?, ?, ?, ?)', (cid, username, json.dumps(ref_users), json.dumps(ref_buyers), 0))

    user_markup = ReplyKeyboardMarkup()
    user_markup.add(catalog)
    user_markup.add(cart, delivery_status, reviews)
    user_markup.add(referal, recrute, contacts)

    await message.answer(f'''
–ü—Ä–∏–≤–µ—Ç, {first_name}! üëã
ü§ñ –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Marrakesh.    
üí∞ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ bitcoin –∏ KUNA Code.
‚ùì –í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –ö–æ–º–∞–Ω–¥–∞ /sos –ø–æ–º–æ–∂–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏. 
–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.''', reply_markup=user_markup)



@dp.message_handler(IsCura(), commands=['cura', 'start'])
async def cura_menu(message: Message):
    cura_markup = ReplyKeyboardMarkup()
    cura_markup.add(orders)
    first_name = message.chat.first_name
    await message.answer(f'''
–ü—Ä–∏–≤–µ—Ç, <b>{first_name}</b>! üëã
ü§ñ –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Marrakesh.        
üí∞ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ bitcoin –∏ KUNA Code.
‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –¢–¢–ù –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –º–æ–∂–Ω–æ –≤ –ø–æ–¥–º–µ–Ω—é "{orders}".''', reply_markup=cura_markup)


@dp.message_handler(IsOper(), commands=['oper', 'start'])
async def oper_menu(message: Message):
    oper_markup = ReplyKeyboardMarkup()
    oper_markup.add(mod_reviews, questions)
    oper_markup.add(mod_recrute)
    first_name = message.chat.first_name
    await message.answer(f'''
–ü—Ä–∏–≤–µ—Ç, <b>{first_name}</b>! üëã
ü§ñ –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Marrakesh.        
üí∞ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ bitcoin –∏ KUNA Code.''', reply_markup=oper_markup)


@dp.message_handler(IsUser(), text=contacts)
async def contacts_text(message: Message):
    cid = message.chat.id
    first_name = db.fetchone('SELECT first_name FROM users WHERE cid=?', (cid,))[0]
    user_markup = ReplyKeyboardMarkup()
    user_markup.add(catalog)
    user_markup.add(cart, delivery_status, reviews)
    user_markup.add(referal, recrute, contacts)

    await message.answer(f'''
 –ü—Ä–∏–≤–µ—Ç, <b>{first_name}</b>! üëã
–≠—Ç–æ —Ä–∞–∑–¥–µ–ª –Ω–∞—à–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.''')
    if db.fetchone('SELECT username FROM contacts WHERE role=?', ('–û–ø–µ—Ä–∞—Ç–æ—Ä',)) is None and db.fetchone('SELECT username FROM contacts WHERE role=?', ('–ê–¥–º–∏–Ω',)) is None:
        await message.answer('–ö–æ–Ω—Ç–∞–∫—Ç—ã –µ—â–µ –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–æ—Ç–∞.', reply_markup=user_markup)

    elif db.fetchone('SELECT username FROM contacts WHERE role=?', ('–û–ø–µ—Ä–∞—Ç–æ—Ä',)) is None:
        admin = db.fetchone('SELECT username FROM contacts WHERE role=?', ('–ê–¥–º–∏–Ω',))[0]
        contact_markup = InlineKeyboardMarkup()
        contact_markup.add(InlineKeyboardButton('–ê–¥–º–∏–Ω', url=f'https://t.me/{admin}?start='))
        await message.answer('–° –Ω–∞–º–∏ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ —ç—Ç–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º:', reply_markup=contact_markup)

    elif db.fetchone('SELECT username FROM contacts WHERE role=?', ('–ê–¥–º–∏–Ω',)) is None:
        oper = db.fetchone('SELECT username FROM contacts WHERE role=?', ('–û–ø–µ—Ä–∞—Ç–æ—Ä',))[0]
        contact_markup = InlineKeyboardMarkup()
        contact_markup.add(InlineKeyboardButton('–û–ø–µ—Ä–∞—Ç–æ—Ä', url=f'https://t.me/{oper}?start='))
        await message.answer('–° –Ω–∞–º–∏ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ —ç—Ç–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º:', reply_markup=contact_markup)

    else:
        admin = db.fetchone('SELECT username FROM contacts WHERE role=?', ('–ê–¥–º–∏–Ω',))[0]
        oper = db.fetchone('SELECT username FROM contacts WHERE role=?', ('–û–ø–µ—Ä–∞—Ç–æ—Ä',))[0]

        contact_markup = InlineKeyboardMarkup()
        contact_markup.add(InlineKeyboardButton('–û–ø–µ—Ä–∞—Ç–æ—Ä', url=f'https://t.me/{oper}?start='))
        contact_markup.add(InlineKeyboardButton('–ê–¥–º–∏–Ω', url=f'https://t.me/{admin}?start='))

        await message.answer('–° –Ω–∞–º–∏ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ —ç—Ç–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º:', reply_markup=contact_markup)
